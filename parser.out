Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COMMENT

Grammar

Rule 0     S' -> program
Rule 1     program -> statement_list
Rule 2     statement_list -> statement
Rule 3     statement_list -> statement_list statement
Rule 4     statement -> simple_statement
Rule 5     statement -> compound_statement
Rule 6     simple_statement -> small_statement NEWLINE
Rule 7     small_statement -> expression_statement
Rule 8     small_statement -> assignment_statement
Rule 9     small_statement -> return_statement
Rule 10    small_statement -> print_statement
Rule 11    expression_statement -> expression
Rule 12    assignment_statement -> ID EQUALS expression
Rule 13    return_statement -> RETURN expression
Rule 14    print_statement -> PRINT LPAREN expression_list RPAREN
Rule 15    compound_statement -> if_statement
Rule 16    compound_statement -> while_statement
Rule 17    compound_statement -> for_statement
Rule 18    compound_statement -> function_def
Rule 19    function_def -> DEF ID LPAREN parameter_list RPAREN COLON suite
Rule 20    parameter_list -> ID
Rule 21    parameter_list -> parameter_list COMMA ID
Rule 22    parameter_list -> <empty>
Rule 23    suite -> INDENT statement_list DEDENT
Rule 24    suite -> simple_statement
Rule 25    if_statement -> IF expression COLON suite
Rule 26    if_statement -> IF expression COLON suite ELSE COLON suite
Rule 27    while_statement -> WHILE expression COLON suite
Rule 28    for_statement -> FOR ID IN expression COLON suite
Rule 29    expression -> arithmetic_expr
Rule 30    expression -> comparison_expr
Rule 31    arithmetic_expr -> term
Rule 32    arithmetic_expr -> arithmetic_expr PLUS term
Rule 33    arithmetic_expr -> arithmetic_expr MINUS term
Rule 34    term -> factor
Rule 35    term -> term TIMES factor
Rule 36    term -> term DIVIDE factor
Rule 37    factor -> LPAREN expression RPAREN
Rule 38    factor -> NUMBER
Rule 39    factor -> STRING
Rule 40    factor -> ID
Rule 41    factor -> function_call
Rule 42    function_call -> ID LPAREN expression_list RPAREN
Rule 43    expression_list -> expression
Rule 44    expression_list -> expression_list COMMA expression
Rule 45    expression_list -> <empty>
Rule 46    comparison_expr -> arithmetic_expr comparison_op arithmetic_expr
Rule 47    comparison_op -> EQ
Rule 48    comparison_op -> NE
Rule 49    comparison_op -> LT
Rule 50    comparison_op -> LE
Rule 51    comparison_op -> GT
Rule 52    comparison_op -> GE

Terminals, with rules where they appear

COLON                : 19 25 26 26 27 28
COMMA                : 21 44
COMMENT              : 
DEDENT               : 23
DEF                  : 19
DIVIDE               : 36
ELSE                 : 26
EQ                   : 47
EQUALS               : 12
FOR                  : 28
GE                   : 52
GT                   : 51
ID                   : 12 19 20 21 28 40 42
IF                   : 25 26
IN                   : 28
INDENT               : 23
LE                   : 50
LPAREN               : 14 19 37 42
LT                   : 49
MINUS                : 33
NE                   : 48
NEWLINE              : 6
NUMBER               : 38
PLUS                 : 32
PRINT                : 14
RETURN               : 13
RPAREN               : 14 19 37 42
STRING               : 39
TIMES                : 35
WHILE                : 27
error                : 

Nonterminals, with rules where they appear

arithmetic_expr      : 29 32 33 46 46
assignment_statement : 8
comparison_expr      : 30
comparison_op        : 46
compound_statement   : 5
expression           : 11 12 13 25 26 27 28 37 43 44
expression_list      : 14 42 44
expression_statement : 7
factor               : 34 35 36
for_statement        : 17
function_call        : 41
function_def         : 18
if_statement         : 15
parameter_list       : 19 21
print_statement      : 10
program              : 0
return_statement     : 9
simple_statement     : 4 24
small_statement      : 6
statement            : 2 3
statement_list       : 1 3 23
suite                : 19 25 26 26 27 28
term                 : 31 32 33 35 36
while_statement      : 16

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . statement_list
    (2) statement_list -> . statement
    (3) statement_list -> . statement_list statement
    (4) statement -> . simple_statement
    (5) statement -> . compound_statement
    (6) simple_statement -> . small_statement NEWLINE
    (15) compound_statement -> . if_statement
    (16) compound_statement -> . while_statement
    (17) compound_statement -> . for_statement
    (18) compound_statement -> . function_def
    (7) small_statement -> . expression_statement
    (8) small_statement -> . assignment_statement
    (9) small_statement -> . return_statement
    (10) small_statement -> . print_statement
    (25) if_statement -> . IF expression COLON suite
    (26) if_statement -> . IF expression COLON suite ELSE COLON suite
    (27) while_statement -> . WHILE expression COLON suite
    (28) for_statement -> . FOR ID IN expression COLON suite
    (19) function_def -> . DEF ID LPAREN parameter_list RPAREN COLON suite
    (11) expression_statement -> . expression
    (12) assignment_statement -> . ID EQUALS expression
    (13) return_statement -> . RETURN expression
    (14) print_statement -> . PRINT LPAREN expression_list RPAREN
    (29) expression -> . arithmetic_expr
    (30) expression -> . comparison_expr
    (31) arithmetic_expr -> . term
    (32) arithmetic_expr -> . arithmetic_expr PLUS term
    (33) arithmetic_expr -> . arithmetic_expr MINUS term
    (46) comparison_expr -> . arithmetic_expr comparison_op arithmetic_expr
    (34) term -> . factor
    (35) term -> . term TIMES factor
    (36) term -> . term DIVIDE factor
    (37) factor -> . LPAREN expression RPAREN
    (38) factor -> . NUMBER
    (39) factor -> . STRING
    (40) factor -> . ID
    (41) factor -> . function_call
    (42) function_call -> . ID LPAREN expression_list RPAREN

    IF              shift and go to state 15
    WHILE           shift and go to state 17
    FOR             shift and go to state 18
    DEF             shift and go to state 20
    ID              shift and go to state 19
    RETURN          shift and go to state 22
    PRINT           shift and go to state 23
    LPAREN          shift and go to state 21
    NUMBER          shift and go to state 28
    STRING          shift and go to state 29

    program                        shift and go to state 1
    statement_list                 shift and go to state 2
    statement                      shift and go to state 3
    simple_statement               shift and go to state 4
    compound_statement             shift and go to state 5
    small_statement                shift and go to state 6
    if_statement                   shift and go to state 7
    while_statement                shift and go to state 8
    for_statement                  shift and go to state 9
    function_def                   shift and go to state 10
    expression_statement           shift and go to state 11
    assignment_statement           shift and go to state 12
    return_statement               shift and go to state 13
    print_statement                shift and go to state 14
    expression                     shift and go to state 16
    arithmetic_expr                shift and go to state 24
    comparison_expr                shift and go to state 25
    term                           shift and go to state 26
    factor                         shift and go to state 27
    function_call                  shift and go to state 30

state 1

    (0) S' -> program .



state 2

    (1) program -> statement_list .
    (3) statement_list -> statement_list . statement
    (4) statement -> . simple_statement
    (5) statement -> . compound_statement
    (6) simple_statement -> . small_statement NEWLINE
    (15) compound_statement -> . if_statement
    (16) compound_statement -> . while_statement
    (17) compound_statement -> . for_statement
    (18) compound_statement -> . function_def
    (7) small_statement -> . expression_statement
    (8) small_statement -> . assignment_statement
    (9) small_statement -> . return_statement
    (10) small_statement -> . print_statement
    (25) if_statement -> . IF expression COLON suite
    (26) if_statement -> . IF expression COLON suite ELSE COLON suite
    (27) while_statement -> . WHILE expression COLON suite
    (28) for_statement -> . FOR ID IN expression COLON suite
    (19) function_def -> . DEF ID LPAREN parameter_list RPAREN COLON suite
    (11) expression_statement -> . expression
    (12) assignment_statement -> . ID EQUALS expression
    (13) return_statement -> . RETURN expression
    (14) print_statement -> . PRINT LPAREN expression_list RPAREN
    (29) expression -> . arithmetic_expr
    (30) expression -> . comparison_expr
    (31) arithmetic_expr -> . term
    (32) arithmetic_expr -> . arithmetic_expr PLUS term
    (33) arithmetic_expr -> . arithmetic_expr MINUS term
    (46) comparison_expr -> . arithmetic_expr comparison_op arithmetic_expr
    (34) term -> . factor
    (35) term -> . term TIMES factor
    (36) term -> . term DIVIDE factor
    (37) factor -> . LPAREN expression RPAREN
    (38) factor -> . NUMBER
    (39) factor -> . STRING
    (40) factor -> . ID
    (41) factor -> . function_call
    (42) function_call -> . ID LPAREN expression_list RPAREN

    $end            reduce using rule 1 (program -> statement_list .)
    IF              shift and go to state 15
    WHILE           shift and go to state 17
    FOR             shift and go to state 18
    DEF             shift and go to state 20
    ID              shift and go to state 19
    RETURN          shift and go to state 22
    PRINT           shift and go to state 23
    LPAREN          shift and go to state 21
    NUMBER          shift and go to state 28
    STRING          shift and go to state 29

    statement                      shift and go to state 31
    simple_statement               shift and go to state 4
    compound_statement             shift and go to state 5
    small_statement                shift and go to state 6
    if_statement                   shift and go to state 7
    while_statement                shift and go to state 8
    for_statement                  shift and go to state 9
    function_def                   shift and go to state 10
    expression_statement           shift and go to state 11
    assignment_statement           shift and go to state 12
    return_statement               shift and go to state 13
    print_statement                shift and go to state 14
    expression                     shift and go to state 16
    arithmetic_expr                shift and go to state 24
    comparison_expr                shift and go to state 25
    term                           shift and go to state 26
    factor                         shift and go to state 27
    function_call                  shift and go to state 30

state 3

    (2) statement_list -> statement .

    IF              reduce using rule 2 (statement_list -> statement .)
    WHILE           reduce using rule 2 (statement_list -> statement .)
    FOR             reduce using rule 2 (statement_list -> statement .)
    DEF             reduce using rule 2 (statement_list -> statement .)
    ID              reduce using rule 2 (statement_list -> statement .)
    RETURN          reduce using rule 2 (statement_list -> statement .)
    PRINT           reduce using rule 2 (statement_list -> statement .)
    LPAREN          reduce using rule 2 (statement_list -> statement .)
    NUMBER          reduce using rule 2 (statement_list -> statement .)
    STRING          reduce using rule 2 (statement_list -> statement .)
    $end            reduce using rule 2 (statement_list -> statement .)
    DEDENT          reduce using rule 2 (statement_list -> statement .)


state 4

    (4) statement -> simple_statement .

    IF              reduce using rule 4 (statement -> simple_statement .)
    WHILE           reduce using rule 4 (statement -> simple_statement .)
    FOR             reduce using rule 4 (statement -> simple_statement .)
    DEF             reduce using rule 4 (statement -> simple_statement .)
    ID              reduce using rule 4 (statement -> simple_statement .)
    RETURN          reduce using rule 4 (statement -> simple_statement .)
    PRINT           reduce using rule 4 (statement -> simple_statement .)
    LPAREN          reduce using rule 4 (statement -> simple_statement .)
    NUMBER          reduce using rule 4 (statement -> simple_statement .)
    STRING          reduce using rule 4 (statement -> simple_statement .)
    $end            reduce using rule 4 (statement -> simple_statement .)
    DEDENT          reduce using rule 4 (statement -> simple_statement .)


state 5

    (5) statement -> compound_statement .

    IF              reduce using rule 5 (statement -> compound_statement .)
    WHILE           reduce using rule 5 (statement -> compound_statement .)
    FOR             reduce using rule 5 (statement -> compound_statement .)
    DEF             reduce using rule 5 (statement -> compound_statement .)
    ID              reduce using rule 5 (statement -> compound_statement .)
    RETURN          reduce using rule 5 (statement -> compound_statement .)
    PRINT           reduce using rule 5 (statement -> compound_statement .)
    LPAREN          reduce using rule 5 (statement -> compound_statement .)
    NUMBER          reduce using rule 5 (statement -> compound_statement .)
    STRING          reduce using rule 5 (statement -> compound_statement .)
    $end            reduce using rule 5 (statement -> compound_statement .)
    DEDENT          reduce using rule 5 (statement -> compound_statement .)


state 6

    (6) simple_statement -> small_statement . NEWLINE

    NEWLINE         shift and go to state 32


state 7

    (15) compound_statement -> if_statement .

    IF              reduce using rule 15 (compound_statement -> if_statement .)
    WHILE           reduce using rule 15 (compound_statement -> if_statement .)
    FOR             reduce using rule 15 (compound_statement -> if_statement .)
    DEF             reduce using rule 15 (compound_statement -> if_statement .)
    ID              reduce using rule 15 (compound_statement -> if_statement .)
    RETURN          reduce using rule 15 (compound_statement -> if_statement .)
    PRINT           reduce using rule 15 (compound_statement -> if_statement .)
    LPAREN          reduce using rule 15 (compound_statement -> if_statement .)
    NUMBER          reduce using rule 15 (compound_statement -> if_statement .)
    STRING          reduce using rule 15 (compound_statement -> if_statement .)
    $end            reduce using rule 15 (compound_statement -> if_statement .)
    DEDENT          reduce using rule 15 (compound_statement -> if_statement .)


state 8

    (16) compound_statement -> while_statement .

    IF              reduce using rule 16 (compound_statement -> while_statement .)
    WHILE           reduce using rule 16 (compound_statement -> while_statement .)
    FOR             reduce using rule 16 (compound_statement -> while_statement .)
    DEF             reduce using rule 16 (compound_statement -> while_statement .)
    ID              reduce using rule 16 (compound_statement -> while_statement .)
    RETURN          reduce using rule 16 (compound_statement -> while_statement .)
    PRINT           reduce using rule 16 (compound_statement -> while_statement .)
    LPAREN          reduce using rule 16 (compound_statement -> while_statement .)
    NUMBER          reduce using rule 16 (compound_statement -> while_statement .)
    STRING          reduce using rule 16 (compound_statement -> while_statement .)
    $end            reduce using rule 16 (compound_statement -> while_statement .)
    DEDENT          reduce using rule 16 (compound_statement -> while_statement .)


state 9

    (17) compound_statement -> for_statement .

    IF              reduce using rule 17 (compound_statement -> for_statement .)
    WHILE           reduce using rule 17 (compound_statement -> for_statement .)
    FOR             reduce using rule 17 (compound_statement -> for_statement .)
    DEF             reduce using rule 17 (compound_statement -> for_statement .)
    ID              reduce using rule 17 (compound_statement -> for_statement .)
    RETURN          reduce using rule 17 (compound_statement -> for_statement .)
    PRINT           reduce using rule 17 (compound_statement -> for_statement .)
    LPAREN          reduce using rule 17 (compound_statement -> for_statement .)
    NUMBER          reduce using rule 17 (compound_statement -> for_statement .)
    STRING          reduce using rule 17 (compound_statement -> for_statement .)
    $end            reduce using rule 17 (compound_statement -> for_statement .)
    DEDENT          reduce using rule 17 (compound_statement -> for_statement .)


state 10

    (18) compound_statement -> function_def .

    IF              reduce using rule 18 (compound_statement -> function_def .)
    WHILE           reduce using rule 18 (compound_statement -> function_def .)
    FOR             reduce using rule 18 (compound_statement -> function_def .)
    DEF             reduce using rule 18 (compound_statement -> function_def .)
    ID              reduce using rule 18 (compound_statement -> function_def .)
    RETURN          reduce using rule 18 (compound_statement -> function_def .)
    PRINT           reduce using rule 18 (compound_statement -> function_def .)
    LPAREN          reduce using rule 18 (compound_statement -> function_def .)
    NUMBER          reduce using rule 18 (compound_statement -> function_def .)
    STRING          reduce using rule 18 (compound_statement -> function_def .)
    $end            reduce using rule 18 (compound_statement -> function_def .)
    DEDENT          reduce using rule 18 (compound_statement -> function_def .)


state 11

    (7) small_statement -> expression_statement .

    NEWLINE         reduce using rule 7 (small_statement -> expression_statement .)


state 12

    (8) small_statement -> assignment_statement .

    NEWLINE         reduce using rule 8 (small_statement -> assignment_statement .)


state 13

    (9) small_statement -> return_statement .

    NEWLINE         reduce using rule 9 (small_statement -> return_statement .)


state 14

    (10) small_statement -> print_statement .

    NEWLINE         reduce using rule 10 (small_statement -> print_statement .)


state 15

    (25) if_statement -> IF . expression COLON suite
    (26) if_statement -> IF . expression COLON suite ELSE COLON suite
    (29) expression -> . arithmetic_expr
    (30) expression -> . comparison_expr
    (31) arithmetic_expr -> . term
    (32) arithmetic_expr -> . arithmetic_expr PLUS term
    (33) arithmetic_expr -> . arithmetic_expr MINUS term
    (46) comparison_expr -> . arithmetic_expr comparison_op arithmetic_expr
    (34) term -> . factor
    (35) term -> . term TIMES factor
    (36) term -> . term DIVIDE factor
    (37) factor -> . LPAREN expression RPAREN
    (38) factor -> . NUMBER
    (39) factor -> . STRING
    (40) factor -> . ID
    (41) factor -> . function_call
    (42) function_call -> . ID LPAREN expression_list RPAREN

    LPAREN          shift and go to state 21
    NUMBER          shift and go to state 28
    STRING          shift and go to state 29
    ID              shift and go to state 34

    expression                     shift and go to state 33
    arithmetic_expr                shift and go to state 24
    comparison_expr                shift and go to state 25
    term                           shift and go to state 26
    factor                         shift and go to state 27
    function_call                  shift and go to state 30

state 16

    (11) expression_statement -> expression .

    NEWLINE         reduce using rule 11 (expression_statement -> expression .)


state 17

    (27) while_statement -> WHILE . expression COLON suite
    (29) expression -> . arithmetic_expr
    (30) expression -> . comparison_expr
    (31) arithmetic_expr -> . term
    (32) arithmetic_expr -> . arithmetic_expr PLUS term
    (33) arithmetic_expr -> . arithmetic_expr MINUS term
    (46) comparison_expr -> . arithmetic_expr comparison_op arithmetic_expr
    (34) term -> . factor
    (35) term -> . term TIMES factor
    (36) term -> . term DIVIDE factor
    (37) factor -> . LPAREN expression RPAREN
    (38) factor -> . NUMBER
    (39) factor -> . STRING
    (40) factor -> . ID
    (41) factor -> . function_call
    (42) function_call -> . ID LPAREN expression_list RPAREN

    LPAREN          shift and go to state 21
    NUMBER          shift and go to state 28
    STRING          shift and go to state 29
    ID              shift and go to state 34

    expression                     shift and go to state 35
    arithmetic_expr                shift and go to state 24
    comparison_expr                shift and go to state 25
    term                           shift and go to state 26
    factor                         shift and go to state 27
    function_call                  shift and go to state 30

state 18

    (28) for_statement -> FOR . ID IN expression COLON suite

    ID              shift and go to state 36


state 19

    (12) assignment_statement -> ID . EQUALS expression
    (40) factor -> ID .
    (42) function_call -> ID . LPAREN expression_list RPAREN

    EQUALS          shift and go to state 37
    TIMES           reduce using rule 40 (factor -> ID .)
    DIVIDE          reduce using rule 40 (factor -> ID .)
    PLUS            reduce using rule 40 (factor -> ID .)
    MINUS           reduce using rule 40 (factor -> ID .)
    EQ              reduce using rule 40 (factor -> ID .)
    NE              reduce using rule 40 (factor -> ID .)
    LT              reduce using rule 40 (factor -> ID .)
    LE              reduce using rule 40 (factor -> ID .)
    GT              reduce using rule 40 (factor -> ID .)
    GE              reduce using rule 40 (factor -> ID .)
    NEWLINE         reduce using rule 40 (factor -> ID .)
    LPAREN          shift and go to state 38


state 20

    (19) function_def -> DEF . ID LPAREN parameter_list RPAREN COLON suite

    ID              shift and go to state 39


state 21

    (37) factor -> LPAREN . expression RPAREN
    (29) expression -> . arithmetic_expr
    (30) expression -> . comparison_expr
    (31) arithmetic_expr -> . term
    (32) arithmetic_expr -> . arithmetic_expr PLUS term
    (33) arithmetic_expr -> . arithmetic_expr MINUS term
    (46) comparison_expr -> . arithmetic_expr comparison_op arithmetic_expr
    (34) term -> . factor
    (35) term -> . term TIMES factor
    (36) term -> . term DIVIDE factor
    (37) factor -> . LPAREN expression RPAREN
    (38) factor -> . NUMBER
    (39) factor -> . STRING
    (40) factor -> . ID
    (41) factor -> . function_call
    (42) function_call -> . ID LPAREN expression_list RPAREN

    LPAREN          shift and go to state 21
    NUMBER          shift and go to state 28
    STRING          shift and go to state 29
    ID              shift and go to state 34

    expression                     shift and go to state 40
    arithmetic_expr                shift and go to state 24
    comparison_expr                shift and go to state 25
    term                           shift and go to state 26
    factor                         shift and go to state 27
    function_call                  shift and go to state 30

state 22

    (13) return_statement -> RETURN . expression
    (29) expression -> . arithmetic_expr
    (30) expression -> . comparison_expr
    (31) arithmetic_expr -> . term
    (32) arithmetic_expr -> . arithmetic_expr PLUS term
    (33) arithmetic_expr -> . arithmetic_expr MINUS term
    (46) comparison_expr -> . arithmetic_expr comparison_op arithmetic_expr
    (34) term -> . factor
    (35) term -> . term TIMES factor
    (36) term -> . term DIVIDE factor
    (37) factor -> . LPAREN expression RPAREN
    (38) factor -> . NUMBER
    (39) factor -> . STRING
    (40) factor -> . ID
    (41) factor -> . function_call
    (42) function_call -> . ID LPAREN expression_list RPAREN

    LPAREN          shift and go to state 21
    NUMBER          shift and go to state 28
    STRING          shift and go to state 29
    ID              shift and go to state 34

    expression                     shift and go to state 41
    arithmetic_expr                shift and go to state 24
    comparison_expr                shift and go to state 25
    term                           shift and go to state 26
    factor                         shift and go to state 27
    function_call                  shift and go to state 30

state 23

    (14) print_statement -> PRINT . LPAREN expression_list RPAREN

    LPAREN          shift and go to state 42


state 24

    (29) expression -> arithmetic_expr .
    (32) arithmetic_expr -> arithmetic_expr . PLUS term
    (33) arithmetic_expr -> arithmetic_expr . MINUS term
    (46) comparison_expr -> arithmetic_expr . comparison_op arithmetic_expr
    (47) comparison_op -> . EQ
    (48) comparison_op -> . NE
    (49) comparison_op -> . LT
    (50) comparison_op -> . LE
    (51) comparison_op -> . GT
    (52) comparison_op -> . GE

    NEWLINE         reduce using rule 29 (expression -> arithmetic_expr .)
    COLON           reduce using rule 29 (expression -> arithmetic_expr .)
    RPAREN          reduce using rule 29 (expression -> arithmetic_expr .)
    COMMA           reduce using rule 29 (expression -> arithmetic_expr .)
    PLUS            shift and go to state 43
    MINUS           shift and go to state 44
    EQ              shift and go to state 46
    NE              shift and go to state 47
    LT              shift and go to state 48
    LE              shift and go to state 49
    GT              shift and go to state 50
    GE              shift and go to state 51

    comparison_op                  shift and go to state 45

state 25

    (30) expression -> comparison_expr .

    NEWLINE         reduce using rule 30 (expression -> comparison_expr .)
    COLON           reduce using rule 30 (expression -> comparison_expr .)
    RPAREN          reduce using rule 30 (expression -> comparison_expr .)
    COMMA           reduce using rule 30 (expression -> comparison_expr .)


state 26

    (31) arithmetic_expr -> term .
    (35) term -> term . TIMES factor
    (36) term -> term . DIVIDE factor

    PLUS            reduce using rule 31 (arithmetic_expr -> term .)
    MINUS           reduce using rule 31 (arithmetic_expr -> term .)
    EQ              reduce using rule 31 (arithmetic_expr -> term .)
    NE              reduce using rule 31 (arithmetic_expr -> term .)
    LT              reduce using rule 31 (arithmetic_expr -> term .)
    LE              reduce using rule 31 (arithmetic_expr -> term .)
    GT              reduce using rule 31 (arithmetic_expr -> term .)
    GE              reduce using rule 31 (arithmetic_expr -> term .)
    NEWLINE         reduce using rule 31 (arithmetic_expr -> term .)
    COLON           reduce using rule 31 (arithmetic_expr -> term .)
    RPAREN          reduce using rule 31 (arithmetic_expr -> term .)
    COMMA           reduce using rule 31 (arithmetic_expr -> term .)
    TIMES           shift and go to state 52
    DIVIDE          shift and go to state 53


state 27

    (34) term -> factor .

    TIMES           reduce using rule 34 (term -> factor .)
    DIVIDE          reduce using rule 34 (term -> factor .)
    PLUS            reduce using rule 34 (term -> factor .)
    MINUS           reduce using rule 34 (term -> factor .)
    EQ              reduce using rule 34 (term -> factor .)
    NE              reduce using rule 34 (term -> factor .)
    LT              reduce using rule 34 (term -> factor .)
    LE              reduce using rule 34 (term -> factor .)
    GT              reduce using rule 34 (term -> factor .)
    GE              reduce using rule 34 (term -> factor .)
    NEWLINE         reduce using rule 34 (term -> factor .)
    COLON           reduce using rule 34 (term -> factor .)
    RPAREN          reduce using rule 34 (term -> factor .)
    COMMA           reduce using rule 34 (term -> factor .)


state 28

    (38) factor -> NUMBER .

    TIMES           reduce using rule 38 (factor -> NUMBER .)
    DIVIDE          reduce using rule 38 (factor -> NUMBER .)
    PLUS            reduce using rule 38 (factor -> NUMBER .)
    MINUS           reduce using rule 38 (factor -> NUMBER .)
    EQ              reduce using rule 38 (factor -> NUMBER .)
    NE              reduce using rule 38 (factor -> NUMBER .)
    LT              reduce using rule 38 (factor -> NUMBER .)
    LE              reduce using rule 38 (factor -> NUMBER .)
    GT              reduce using rule 38 (factor -> NUMBER .)
    GE              reduce using rule 38 (factor -> NUMBER .)
    NEWLINE         reduce using rule 38 (factor -> NUMBER .)
    COLON           reduce using rule 38 (factor -> NUMBER .)
    RPAREN          reduce using rule 38 (factor -> NUMBER .)
    COMMA           reduce using rule 38 (factor -> NUMBER .)


state 29

    (39) factor -> STRING .

    TIMES           reduce using rule 39 (factor -> STRING .)
    DIVIDE          reduce using rule 39 (factor -> STRING .)
    PLUS            reduce using rule 39 (factor -> STRING .)
    MINUS           reduce using rule 39 (factor -> STRING .)
    EQ              reduce using rule 39 (factor -> STRING .)
    NE              reduce using rule 39 (factor -> STRING .)
    LT              reduce using rule 39 (factor -> STRING .)
    LE              reduce using rule 39 (factor -> STRING .)
    GT              reduce using rule 39 (factor -> STRING .)
    GE              reduce using rule 39 (factor -> STRING .)
    NEWLINE         reduce using rule 39 (factor -> STRING .)
    COLON           reduce using rule 39 (factor -> STRING .)
    RPAREN          reduce using rule 39 (factor -> STRING .)
    COMMA           reduce using rule 39 (factor -> STRING .)


state 30

    (41) factor -> function_call .

    TIMES           reduce using rule 41 (factor -> function_call .)
    DIVIDE          reduce using rule 41 (factor -> function_call .)
    PLUS            reduce using rule 41 (factor -> function_call .)
    MINUS           reduce using rule 41 (factor -> function_call .)
    EQ              reduce using rule 41 (factor -> function_call .)
    NE              reduce using rule 41 (factor -> function_call .)
    LT              reduce using rule 41 (factor -> function_call .)
    LE              reduce using rule 41 (factor -> function_call .)
    GT              reduce using rule 41 (factor -> function_call .)
    GE              reduce using rule 41 (factor -> function_call .)
    NEWLINE         reduce using rule 41 (factor -> function_call .)
    COLON           reduce using rule 41 (factor -> function_call .)
    RPAREN          reduce using rule 41 (factor -> function_call .)
    COMMA           reduce using rule 41 (factor -> function_call .)


state 31

    (3) statement_list -> statement_list statement .

    IF              reduce using rule 3 (statement_list -> statement_list statement .)
    WHILE           reduce using rule 3 (statement_list -> statement_list statement .)
    FOR             reduce using rule 3 (statement_list -> statement_list statement .)
    DEF             reduce using rule 3 (statement_list -> statement_list statement .)
    ID              reduce using rule 3 (statement_list -> statement_list statement .)
    RETURN          reduce using rule 3 (statement_list -> statement_list statement .)
    PRINT           reduce using rule 3 (statement_list -> statement_list statement .)
    LPAREN          reduce using rule 3 (statement_list -> statement_list statement .)
    NUMBER          reduce using rule 3 (statement_list -> statement_list statement .)
    STRING          reduce using rule 3 (statement_list -> statement_list statement .)
    $end            reduce using rule 3 (statement_list -> statement_list statement .)
    DEDENT          reduce using rule 3 (statement_list -> statement_list statement .)


state 32

    (6) simple_statement -> small_statement NEWLINE .

    IF              reduce using rule 6 (simple_statement -> small_statement NEWLINE .)
    WHILE           reduce using rule 6 (simple_statement -> small_statement NEWLINE .)
    FOR             reduce using rule 6 (simple_statement -> small_statement NEWLINE .)
    DEF             reduce using rule 6 (simple_statement -> small_statement NEWLINE .)
    ID              reduce using rule 6 (simple_statement -> small_statement NEWLINE .)
    RETURN          reduce using rule 6 (simple_statement -> small_statement NEWLINE .)
    PRINT           reduce using rule 6 (simple_statement -> small_statement NEWLINE .)
    LPAREN          reduce using rule 6 (simple_statement -> small_statement NEWLINE .)
    NUMBER          reduce using rule 6 (simple_statement -> small_statement NEWLINE .)
    STRING          reduce using rule 6 (simple_statement -> small_statement NEWLINE .)
    $end            reduce using rule 6 (simple_statement -> small_statement NEWLINE .)
    ELSE            reduce using rule 6 (simple_statement -> small_statement NEWLINE .)
    DEDENT          reduce using rule 6 (simple_statement -> small_statement NEWLINE .)


state 33

    (25) if_statement -> IF expression . COLON suite
    (26) if_statement -> IF expression . COLON suite ELSE COLON suite

    COLON           shift and go to state 54


state 34

    (40) factor -> ID .
    (42) function_call -> ID . LPAREN expression_list RPAREN

    TIMES           reduce using rule 40 (factor -> ID .)
    DIVIDE          reduce using rule 40 (factor -> ID .)
    PLUS            reduce using rule 40 (factor -> ID .)
    MINUS           reduce using rule 40 (factor -> ID .)
    EQ              reduce using rule 40 (factor -> ID .)
    NE              reduce using rule 40 (factor -> ID .)
    LT              reduce using rule 40 (factor -> ID .)
    LE              reduce using rule 40 (factor -> ID .)
    GT              reduce using rule 40 (factor -> ID .)
    GE              reduce using rule 40 (factor -> ID .)
    COLON           reduce using rule 40 (factor -> ID .)
    RPAREN          reduce using rule 40 (factor -> ID .)
    NEWLINE         reduce using rule 40 (factor -> ID .)
    COMMA           reduce using rule 40 (factor -> ID .)
    LPAREN          shift and go to state 38


state 35

    (27) while_statement -> WHILE expression . COLON suite

    COLON           shift and go to state 55


state 36

    (28) for_statement -> FOR ID . IN expression COLON suite

    IN              shift and go to state 56


state 37

    (12) assignment_statement -> ID EQUALS . expression
    (29) expression -> . arithmetic_expr
    (30) expression -> . comparison_expr
    (31) arithmetic_expr -> . term
    (32) arithmetic_expr -> . arithmetic_expr PLUS term
    (33) arithmetic_expr -> . arithmetic_expr MINUS term
    (46) comparison_expr -> . arithmetic_expr comparison_op arithmetic_expr
    (34) term -> . factor
    (35) term -> . term TIMES factor
    (36) term -> . term DIVIDE factor
    (37) factor -> . LPAREN expression RPAREN
    (38) factor -> . NUMBER
    (39) factor -> . STRING
    (40) factor -> . ID
    (41) factor -> . function_call
    (42) function_call -> . ID LPAREN expression_list RPAREN

    LPAREN          shift and go to state 21
    NUMBER          shift and go to state 28
    STRING          shift and go to state 29
    ID              shift and go to state 34

    expression                     shift and go to state 57
    arithmetic_expr                shift and go to state 24
    comparison_expr                shift and go to state 25
    term                           shift and go to state 26
    factor                         shift and go to state 27
    function_call                  shift and go to state 30

state 38

    (42) function_call -> ID LPAREN . expression_list RPAREN
    (43) expression_list -> . expression
    (44) expression_list -> . expression_list COMMA expression
    (45) expression_list -> .
    (29) expression -> . arithmetic_expr
    (30) expression -> . comparison_expr
    (31) arithmetic_expr -> . term
    (32) arithmetic_expr -> . arithmetic_expr PLUS term
    (33) arithmetic_expr -> . arithmetic_expr MINUS term
    (46) comparison_expr -> . arithmetic_expr comparison_op arithmetic_expr
    (34) term -> . factor
    (35) term -> . term TIMES factor
    (36) term -> . term DIVIDE factor
    (37) factor -> . LPAREN expression RPAREN
    (38) factor -> . NUMBER
    (39) factor -> . STRING
    (40) factor -> . ID
    (41) factor -> . function_call
    (42) function_call -> . ID LPAREN expression_list RPAREN

    RPAREN          reduce using rule 45 (expression_list -> .)
    COMMA           reduce using rule 45 (expression_list -> .)
    LPAREN          shift and go to state 21
    NUMBER          shift and go to state 28
    STRING          shift and go to state 29
    ID              shift and go to state 34

    expression_list                shift and go to state 58
    expression                     shift and go to state 59
    arithmetic_expr                shift and go to state 24
    comparison_expr                shift and go to state 25
    term                           shift and go to state 26
    factor                         shift and go to state 27
    function_call                  shift and go to state 30

state 39

    (19) function_def -> DEF ID . LPAREN parameter_list RPAREN COLON suite

    LPAREN          shift and go to state 60


state 40

    (37) factor -> LPAREN expression . RPAREN

    RPAREN          shift and go to state 61


state 41

    (13) return_statement -> RETURN expression .

    NEWLINE         reduce using rule 13 (return_statement -> RETURN expression .)


state 42

    (14) print_statement -> PRINT LPAREN . expression_list RPAREN
    (43) expression_list -> . expression
    (44) expression_list -> . expression_list COMMA expression
    (45) expression_list -> .
    (29) expression -> . arithmetic_expr
    (30) expression -> . comparison_expr
    (31) arithmetic_expr -> . term
    (32) arithmetic_expr -> . arithmetic_expr PLUS term
    (33) arithmetic_expr -> . arithmetic_expr MINUS term
    (46) comparison_expr -> . arithmetic_expr comparison_op arithmetic_expr
    (34) term -> . factor
    (35) term -> . term TIMES factor
    (36) term -> . term DIVIDE factor
    (37) factor -> . LPAREN expression RPAREN
    (38) factor -> . NUMBER
    (39) factor -> . STRING
    (40) factor -> . ID
    (41) factor -> . function_call
    (42) function_call -> . ID LPAREN expression_list RPAREN

    RPAREN          reduce using rule 45 (expression_list -> .)
    COMMA           reduce using rule 45 (expression_list -> .)
    LPAREN          shift and go to state 21
    NUMBER          shift and go to state 28
    STRING          shift and go to state 29
    ID              shift and go to state 34

    expression_list                shift and go to state 62
    expression                     shift and go to state 59
    arithmetic_expr                shift and go to state 24
    comparison_expr                shift and go to state 25
    term                           shift and go to state 26
    factor                         shift and go to state 27
    function_call                  shift and go to state 30

state 43

    (32) arithmetic_expr -> arithmetic_expr PLUS . term
    (34) term -> . factor
    (35) term -> . term TIMES factor
    (36) term -> . term DIVIDE factor
    (37) factor -> . LPAREN expression RPAREN
    (38) factor -> . NUMBER
    (39) factor -> . STRING
    (40) factor -> . ID
    (41) factor -> . function_call
    (42) function_call -> . ID LPAREN expression_list RPAREN

    LPAREN          shift and go to state 21
    NUMBER          shift and go to state 28
    STRING          shift and go to state 29
    ID              shift and go to state 34

    term                           shift and go to state 63
    factor                         shift and go to state 27
    function_call                  shift and go to state 30

state 44

    (33) arithmetic_expr -> arithmetic_expr MINUS . term
    (34) term -> . factor
    (35) term -> . term TIMES factor
    (36) term -> . term DIVIDE factor
    (37) factor -> . LPAREN expression RPAREN
    (38) factor -> . NUMBER
    (39) factor -> . STRING
    (40) factor -> . ID
    (41) factor -> . function_call
    (42) function_call -> . ID LPAREN expression_list RPAREN

    LPAREN          shift and go to state 21
    NUMBER          shift and go to state 28
    STRING          shift and go to state 29
    ID              shift and go to state 34

    term                           shift and go to state 64
    factor                         shift and go to state 27
    function_call                  shift and go to state 30

state 45

    (46) comparison_expr -> arithmetic_expr comparison_op . arithmetic_expr
    (31) arithmetic_expr -> . term
    (32) arithmetic_expr -> . arithmetic_expr PLUS term
    (33) arithmetic_expr -> . arithmetic_expr MINUS term
    (34) term -> . factor
    (35) term -> . term TIMES factor
    (36) term -> . term DIVIDE factor
    (37) factor -> . LPAREN expression RPAREN
    (38) factor -> . NUMBER
    (39) factor -> . STRING
    (40) factor -> . ID
    (41) factor -> . function_call
    (42) function_call -> . ID LPAREN expression_list RPAREN

    LPAREN          shift and go to state 21
    NUMBER          shift and go to state 28
    STRING          shift and go to state 29
    ID              shift and go to state 34

    arithmetic_expr                shift and go to state 65
    term                           shift and go to state 26
    factor                         shift and go to state 27
    function_call                  shift and go to state 30

state 46

    (47) comparison_op -> EQ .

    LPAREN          reduce using rule 47 (comparison_op -> EQ .)
    NUMBER          reduce using rule 47 (comparison_op -> EQ .)
    STRING          reduce using rule 47 (comparison_op -> EQ .)
    ID              reduce using rule 47 (comparison_op -> EQ .)


state 47

    (48) comparison_op -> NE .

    LPAREN          reduce using rule 48 (comparison_op -> NE .)
    NUMBER          reduce using rule 48 (comparison_op -> NE .)
    STRING          reduce using rule 48 (comparison_op -> NE .)
    ID              reduce using rule 48 (comparison_op -> NE .)


state 48

    (49) comparison_op -> LT .

    LPAREN          reduce using rule 49 (comparison_op -> LT .)
    NUMBER          reduce using rule 49 (comparison_op -> LT .)
    STRING          reduce using rule 49 (comparison_op -> LT .)
    ID              reduce using rule 49 (comparison_op -> LT .)


state 49

    (50) comparison_op -> LE .

    LPAREN          reduce using rule 50 (comparison_op -> LE .)
    NUMBER          reduce using rule 50 (comparison_op -> LE .)
    STRING          reduce using rule 50 (comparison_op -> LE .)
    ID              reduce using rule 50 (comparison_op -> LE .)


state 50

    (51) comparison_op -> GT .

    LPAREN          reduce using rule 51 (comparison_op -> GT .)
    NUMBER          reduce using rule 51 (comparison_op -> GT .)
    STRING          reduce using rule 51 (comparison_op -> GT .)
    ID              reduce using rule 51 (comparison_op -> GT .)


state 51

    (52) comparison_op -> GE .

    LPAREN          reduce using rule 52 (comparison_op -> GE .)
    NUMBER          reduce using rule 52 (comparison_op -> GE .)
    STRING          reduce using rule 52 (comparison_op -> GE .)
    ID              reduce using rule 52 (comparison_op -> GE .)


state 52

    (35) term -> term TIMES . factor
    (37) factor -> . LPAREN expression RPAREN
    (38) factor -> . NUMBER
    (39) factor -> . STRING
    (40) factor -> . ID
    (41) factor -> . function_call
    (42) function_call -> . ID LPAREN expression_list RPAREN

    LPAREN          shift and go to state 21
    NUMBER          shift and go to state 28
    STRING          shift and go to state 29
    ID              shift and go to state 34

    factor                         shift and go to state 66
    function_call                  shift and go to state 30

state 53

    (36) term -> term DIVIDE . factor
    (37) factor -> . LPAREN expression RPAREN
    (38) factor -> . NUMBER
    (39) factor -> . STRING
    (40) factor -> . ID
    (41) factor -> . function_call
    (42) function_call -> . ID LPAREN expression_list RPAREN

    LPAREN          shift and go to state 21
    NUMBER          shift and go to state 28
    STRING          shift and go to state 29
    ID              shift and go to state 34

    factor                         shift and go to state 67
    function_call                  shift and go to state 30

state 54

    (25) if_statement -> IF expression COLON . suite
    (26) if_statement -> IF expression COLON . suite ELSE COLON suite
    (23) suite -> . INDENT statement_list DEDENT
    (24) suite -> . simple_statement
    (6) simple_statement -> . small_statement NEWLINE
    (7) small_statement -> . expression_statement
    (8) small_statement -> . assignment_statement
    (9) small_statement -> . return_statement
    (10) small_statement -> . print_statement
    (11) expression_statement -> . expression
    (12) assignment_statement -> . ID EQUALS expression
    (13) return_statement -> . RETURN expression
    (14) print_statement -> . PRINT LPAREN expression_list RPAREN
    (29) expression -> . arithmetic_expr
    (30) expression -> . comparison_expr
    (31) arithmetic_expr -> . term
    (32) arithmetic_expr -> . arithmetic_expr PLUS term
    (33) arithmetic_expr -> . arithmetic_expr MINUS term
    (46) comparison_expr -> . arithmetic_expr comparison_op arithmetic_expr
    (34) term -> . factor
    (35) term -> . term TIMES factor
    (36) term -> . term DIVIDE factor
    (37) factor -> . LPAREN expression RPAREN
    (38) factor -> . NUMBER
    (39) factor -> . STRING
    (40) factor -> . ID
    (41) factor -> . function_call
    (42) function_call -> . ID LPAREN expression_list RPAREN

    INDENT          shift and go to state 69
    ID              shift and go to state 19
    RETURN          shift and go to state 22
    PRINT           shift and go to state 23
    LPAREN          shift and go to state 21
    NUMBER          shift and go to state 28
    STRING          shift and go to state 29

    expression                     shift and go to state 16
    suite                          shift and go to state 68
    simple_statement               shift and go to state 70
    small_statement                shift and go to state 6
    expression_statement           shift and go to state 11
    assignment_statement           shift and go to state 12
    return_statement               shift and go to state 13
    print_statement                shift and go to state 14
    arithmetic_expr                shift and go to state 24
    comparison_expr                shift and go to state 25
    term                           shift and go to state 26
    factor                         shift and go to state 27
    function_call                  shift and go to state 30

state 55

    (27) while_statement -> WHILE expression COLON . suite
    (23) suite -> . INDENT statement_list DEDENT
    (24) suite -> . simple_statement
    (6) simple_statement -> . small_statement NEWLINE
    (7) small_statement -> . expression_statement
    (8) small_statement -> . assignment_statement
    (9) small_statement -> . return_statement
    (10) small_statement -> . print_statement
    (11) expression_statement -> . expression
    (12) assignment_statement -> . ID EQUALS expression
    (13) return_statement -> . RETURN expression
    (14) print_statement -> . PRINT LPAREN expression_list RPAREN
    (29) expression -> . arithmetic_expr
    (30) expression -> . comparison_expr
    (31) arithmetic_expr -> . term
    (32) arithmetic_expr -> . arithmetic_expr PLUS term
    (33) arithmetic_expr -> . arithmetic_expr MINUS term
    (46) comparison_expr -> . arithmetic_expr comparison_op arithmetic_expr
    (34) term -> . factor
    (35) term -> . term TIMES factor
    (36) term -> . term DIVIDE factor
    (37) factor -> . LPAREN expression RPAREN
    (38) factor -> . NUMBER
    (39) factor -> . STRING
    (40) factor -> . ID
    (41) factor -> . function_call
    (42) function_call -> . ID LPAREN expression_list RPAREN

    INDENT          shift and go to state 69
    ID              shift and go to state 19
    RETURN          shift and go to state 22
    PRINT           shift and go to state 23
    LPAREN          shift and go to state 21
    NUMBER          shift and go to state 28
    STRING          shift and go to state 29

    expression                     shift and go to state 16
    suite                          shift and go to state 71
    simple_statement               shift and go to state 70
    small_statement                shift and go to state 6
    expression_statement           shift and go to state 11
    assignment_statement           shift and go to state 12
    return_statement               shift and go to state 13
    print_statement                shift and go to state 14
    arithmetic_expr                shift and go to state 24
    comparison_expr                shift and go to state 25
    term                           shift and go to state 26
    factor                         shift and go to state 27
    function_call                  shift and go to state 30

state 56

    (28) for_statement -> FOR ID IN . expression COLON suite
    (29) expression -> . arithmetic_expr
    (30) expression -> . comparison_expr
    (31) arithmetic_expr -> . term
    (32) arithmetic_expr -> . arithmetic_expr PLUS term
    (33) arithmetic_expr -> . arithmetic_expr MINUS term
    (46) comparison_expr -> . arithmetic_expr comparison_op arithmetic_expr
    (34) term -> . factor
    (35) term -> . term TIMES factor
    (36) term -> . term DIVIDE factor
    (37) factor -> . LPAREN expression RPAREN
    (38) factor -> . NUMBER
    (39) factor -> . STRING
    (40) factor -> . ID
    (41) factor -> . function_call
    (42) function_call -> . ID LPAREN expression_list RPAREN

    LPAREN          shift and go to state 21
    NUMBER          shift and go to state 28
    STRING          shift and go to state 29
    ID              shift and go to state 34

    expression                     shift and go to state 72
    arithmetic_expr                shift and go to state 24
    comparison_expr                shift and go to state 25
    term                           shift and go to state 26
    factor                         shift and go to state 27
    function_call                  shift and go to state 30

state 57

    (12) assignment_statement -> ID EQUALS expression .

    NEWLINE         reduce using rule 12 (assignment_statement -> ID EQUALS expression .)


state 58

    (42) function_call -> ID LPAREN expression_list . RPAREN
    (44) expression_list -> expression_list . COMMA expression

    RPAREN          shift and go to state 73
    COMMA           shift and go to state 74


state 59

    (43) expression_list -> expression .

    RPAREN          reduce using rule 43 (expression_list -> expression .)
    COMMA           reduce using rule 43 (expression_list -> expression .)


state 60

    (19) function_def -> DEF ID LPAREN . parameter_list RPAREN COLON suite
    (20) parameter_list -> . ID
    (21) parameter_list -> . parameter_list COMMA ID
    (22) parameter_list -> .

    ID              shift and go to state 75
    RPAREN          reduce using rule 22 (parameter_list -> .)
    COMMA           reduce using rule 22 (parameter_list -> .)

    parameter_list                 shift and go to state 76

state 61

    (37) factor -> LPAREN expression RPAREN .

    TIMES           reduce using rule 37 (factor -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 37 (factor -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 37 (factor -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 37 (factor -> LPAREN expression RPAREN .)
    EQ              reduce using rule 37 (factor -> LPAREN expression RPAREN .)
    NE              reduce using rule 37 (factor -> LPAREN expression RPAREN .)
    LT              reduce using rule 37 (factor -> LPAREN expression RPAREN .)
    LE              reduce using rule 37 (factor -> LPAREN expression RPAREN .)
    GT              reduce using rule 37 (factor -> LPAREN expression RPAREN .)
    GE              reduce using rule 37 (factor -> LPAREN expression RPAREN .)
    NEWLINE         reduce using rule 37 (factor -> LPAREN expression RPAREN .)
    COLON           reduce using rule 37 (factor -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 37 (factor -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 37 (factor -> LPAREN expression RPAREN .)


state 62

    (14) print_statement -> PRINT LPAREN expression_list . RPAREN
    (44) expression_list -> expression_list . COMMA expression

    RPAREN          shift and go to state 77
    COMMA           shift and go to state 74


state 63

    (32) arithmetic_expr -> arithmetic_expr PLUS term .
    (35) term -> term . TIMES factor
    (36) term -> term . DIVIDE factor

    PLUS            reduce using rule 32 (arithmetic_expr -> arithmetic_expr PLUS term .)
    MINUS           reduce using rule 32 (arithmetic_expr -> arithmetic_expr PLUS term .)
    EQ              reduce using rule 32 (arithmetic_expr -> arithmetic_expr PLUS term .)
    NE              reduce using rule 32 (arithmetic_expr -> arithmetic_expr PLUS term .)
    LT              reduce using rule 32 (arithmetic_expr -> arithmetic_expr PLUS term .)
    LE              reduce using rule 32 (arithmetic_expr -> arithmetic_expr PLUS term .)
    GT              reduce using rule 32 (arithmetic_expr -> arithmetic_expr PLUS term .)
    GE              reduce using rule 32 (arithmetic_expr -> arithmetic_expr PLUS term .)
    NEWLINE         reduce using rule 32 (arithmetic_expr -> arithmetic_expr PLUS term .)
    COLON           reduce using rule 32 (arithmetic_expr -> arithmetic_expr PLUS term .)
    RPAREN          reduce using rule 32 (arithmetic_expr -> arithmetic_expr PLUS term .)
    COMMA           reduce using rule 32 (arithmetic_expr -> arithmetic_expr PLUS term .)
    TIMES           shift and go to state 52
    DIVIDE          shift and go to state 53


state 64

    (33) arithmetic_expr -> arithmetic_expr MINUS term .
    (35) term -> term . TIMES factor
    (36) term -> term . DIVIDE factor

    PLUS            reduce using rule 33 (arithmetic_expr -> arithmetic_expr MINUS term .)
    MINUS           reduce using rule 33 (arithmetic_expr -> arithmetic_expr MINUS term .)
    EQ              reduce using rule 33 (arithmetic_expr -> arithmetic_expr MINUS term .)
    NE              reduce using rule 33 (arithmetic_expr -> arithmetic_expr MINUS term .)
    LT              reduce using rule 33 (arithmetic_expr -> arithmetic_expr MINUS term .)
    LE              reduce using rule 33 (arithmetic_expr -> arithmetic_expr MINUS term .)
    GT              reduce using rule 33 (arithmetic_expr -> arithmetic_expr MINUS term .)
    GE              reduce using rule 33 (arithmetic_expr -> arithmetic_expr MINUS term .)
    NEWLINE         reduce using rule 33 (arithmetic_expr -> arithmetic_expr MINUS term .)
    COLON           reduce using rule 33 (arithmetic_expr -> arithmetic_expr MINUS term .)
    RPAREN          reduce using rule 33 (arithmetic_expr -> arithmetic_expr MINUS term .)
    COMMA           reduce using rule 33 (arithmetic_expr -> arithmetic_expr MINUS term .)
    TIMES           shift and go to state 52
    DIVIDE          shift and go to state 53


state 65

    (46) comparison_expr -> arithmetic_expr comparison_op arithmetic_expr .
    (32) arithmetic_expr -> arithmetic_expr . PLUS term
    (33) arithmetic_expr -> arithmetic_expr . MINUS term

    NEWLINE         reduce using rule 46 (comparison_expr -> arithmetic_expr comparison_op arithmetic_expr .)
    COLON           reduce using rule 46 (comparison_expr -> arithmetic_expr comparison_op arithmetic_expr .)
    RPAREN          reduce using rule 46 (comparison_expr -> arithmetic_expr comparison_op arithmetic_expr .)
    COMMA           reduce using rule 46 (comparison_expr -> arithmetic_expr comparison_op arithmetic_expr .)
    PLUS            shift and go to state 43
    MINUS           shift and go to state 44


state 66

    (35) term -> term TIMES factor .

    TIMES           reduce using rule 35 (term -> term TIMES factor .)
    DIVIDE          reduce using rule 35 (term -> term TIMES factor .)
    PLUS            reduce using rule 35 (term -> term TIMES factor .)
    MINUS           reduce using rule 35 (term -> term TIMES factor .)
    EQ              reduce using rule 35 (term -> term TIMES factor .)
    NE              reduce using rule 35 (term -> term TIMES factor .)
    LT              reduce using rule 35 (term -> term TIMES factor .)
    LE              reduce using rule 35 (term -> term TIMES factor .)
    GT              reduce using rule 35 (term -> term TIMES factor .)
    GE              reduce using rule 35 (term -> term TIMES factor .)
    NEWLINE         reduce using rule 35 (term -> term TIMES factor .)
    COLON           reduce using rule 35 (term -> term TIMES factor .)
    RPAREN          reduce using rule 35 (term -> term TIMES factor .)
    COMMA           reduce using rule 35 (term -> term TIMES factor .)


state 67

    (36) term -> term DIVIDE factor .

    TIMES           reduce using rule 36 (term -> term DIVIDE factor .)
    DIVIDE          reduce using rule 36 (term -> term DIVIDE factor .)
    PLUS            reduce using rule 36 (term -> term DIVIDE factor .)
    MINUS           reduce using rule 36 (term -> term DIVIDE factor .)
    EQ              reduce using rule 36 (term -> term DIVIDE factor .)
    NE              reduce using rule 36 (term -> term DIVIDE factor .)
    LT              reduce using rule 36 (term -> term DIVIDE factor .)
    LE              reduce using rule 36 (term -> term DIVIDE factor .)
    GT              reduce using rule 36 (term -> term DIVIDE factor .)
    GE              reduce using rule 36 (term -> term DIVIDE factor .)
    NEWLINE         reduce using rule 36 (term -> term DIVIDE factor .)
    COLON           reduce using rule 36 (term -> term DIVIDE factor .)
    RPAREN          reduce using rule 36 (term -> term DIVIDE factor .)
    COMMA           reduce using rule 36 (term -> term DIVIDE factor .)


state 68

    (25) if_statement -> IF expression COLON suite .
    (26) if_statement -> IF expression COLON suite . ELSE COLON suite

    IF              reduce using rule 25 (if_statement -> IF expression COLON suite .)
    WHILE           reduce using rule 25 (if_statement -> IF expression COLON suite .)
    FOR             reduce using rule 25 (if_statement -> IF expression COLON suite .)
    DEF             reduce using rule 25 (if_statement -> IF expression COLON suite .)
    ID              reduce using rule 25 (if_statement -> IF expression COLON suite .)
    RETURN          reduce using rule 25 (if_statement -> IF expression COLON suite .)
    PRINT           reduce using rule 25 (if_statement -> IF expression COLON suite .)
    LPAREN          reduce using rule 25 (if_statement -> IF expression COLON suite .)
    NUMBER          reduce using rule 25 (if_statement -> IF expression COLON suite .)
    STRING          reduce using rule 25 (if_statement -> IF expression COLON suite .)
    $end            reduce using rule 25 (if_statement -> IF expression COLON suite .)
    DEDENT          reduce using rule 25 (if_statement -> IF expression COLON suite .)
    ELSE            shift and go to state 78


state 69

    (23) suite -> INDENT . statement_list DEDENT
    (2) statement_list -> . statement
    (3) statement_list -> . statement_list statement
    (4) statement -> . simple_statement
    (5) statement -> . compound_statement
    (6) simple_statement -> . small_statement NEWLINE
    (15) compound_statement -> . if_statement
    (16) compound_statement -> . while_statement
    (17) compound_statement -> . for_statement
    (18) compound_statement -> . function_def
    (7) small_statement -> . expression_statement
    (8) small_statement -> . assignment_statement
    (9) small_statement -> . return_statement
    (10) small_statement -> . print_statement
    (25) if_statement -> . IF expression COLON suite
    (26) if_statement -> . IF expression COLON suite ELSE COLON suite
    (27) while_statement -> . WHILE expression COLON suite
    (28) for_statement -> . FOR ID IN expression COLON suite
    (19) function_def -> . DEF ID LPAREN parameter_list RPAREN COLON suite
    (11) expression_statement -> . expression
    (12) assignment_statement -> . ID EQUALS expression
    (13) return_statement -> . RETURN expression
    (14) print_statement -> . PRINT LPAREN expression_list RPAREN
    (29) expression -> . arithmetic_expr
    (30) expression -> . comparison_expr
    (31) arithmetic_expr -> . term
    (32) arithmetic_expr -> . arithmetic_expr PLUS term
    (33) arithmetic_expr -> . arithmetic_expr MINUS term
    (46) comparison_expr -> . arithmetic_expr comparison_op arithmetic_expr
    (34) term -> . factor
    (35) term -> . term TIMES factor
    (36) term -> . term DIVIDE factor
    (37) factor -> . LPAREN expression RPAREN
    (38) factor -> . NUMBER
    (39) factor -> . STRING
    (40) factor -> . ID
    (41) factor -> . function_call
    (42) function_call -> . ID LPAREN expression_list RPAREN

    IF              shift and go to state 15
    WHILE           shift and go to state 17
    FOR             shift and go to state 18
    DEF             shift and go to state 20
    ID              shift and go to state 19
    RETURN          shift and go to state 22
    PRINT           shift and go to state 23
    LPAREN          shift and go to state 21
    NUMBER          shift and go to state 28
    STRING          shift and go to state 29

    statement_list                 shift and go to state 79
    statement                      shift and go to state 3
    simple_statement               shift and go to state 4
    compound_statement             shift and go to state 5
    small_statement                shift and go to state 6
    if_statement                   shift and go to state 7
    while_statement                shift and go to state 8
    for_statement                  shift and go to state 9
    function_def                   shift and go to state 10
    expression_statement           shift and go to state 11
    assignment_statement           shift and go to state 12
    return_statement               shift and go to state 13
    print_statement                shift and go to state 14
    expression                     shift and go to state 16
    arithmetic_expr                shift and go to state 24
    comparison_expr                shift and go to state 25
    term                           shift and go to state 26
    factor                         shift and go to state 27
    function_call                  shift and go to state 30

state 70

    (24) suite -> simple_statement .

    ELSE            reduce using rule 24 (suite -> simple_statement .)
    IF              reduce using rule 24 (suite -> simple_statement .)
    WHILE           reduce using rule 24 (suite -> simple_statement .)
    FOR             reduce using rule 24 (suite -> simple_statement .)
    DEF             reduce using rule 24 (suite -> simple_statement .)
    ID              reduce using rule 24 (suite -> simple_statement .)
    RETURN          reduce using rule 24 (suite -> simple_statement .)
    PRINT           reduce using rule 24 (suite -> simple_statement .)
    LPAREN          reduce using rule 24 (suite -> simple_statement .)
    NUMBER          reduce using rule 24 (suite -> simple_statement .)
    STRING          reduce using rule 24 (suite -> simple_statement .)
    $end            reduce using rule 24 (suite -> simple_statement .)
    DEDENT          reduce using rule 24 (suite -> simple_statement .)


state 71

    (27) while_statement -> WHILE expression COLON suite .

    IF              reduce using rule 27 (while_statement -> WHILE expression COLON suite .)
    WHILE           reduce using rule 27 (while_statement -> WHILE expression COLON suite .)
    FOR             reduce using rule 27 (while_statement -> WHILE expression COLON suite .)
    DEF             reduce using rule 27 (while_statement -> WHILE expression COLON suite .)
    ID              reduce using rule 27 (while_statement -> WHILE expression COLON suite .)
    RETURN          reduce using rule 27 (while_statement -> WHILE expression COLON suite .)
    PRINT           reduce using rule 27 (while_statement -> WHILE expression COLON suite .)
    LPAREN          reduce using rule 27 (while_statement -> WHILE expression COLON suite .)
    NUMBER          reduce using rule 27 (while_statement -> WHILE expression COLON suite .)
    STRING          reduce using rule 27 (while_statement -> WHILE expression COLON suite .)
    $end            reduce using rule 27 (while_statement -> WHILE expression COLON suite .)
    DEDENT          reduce using rule 27 (while_statement -> WHILE expression COLON suite .)


state 72

    (28) for_statement -> FOR ID IN expression . COLON suite

    COLON           shift and go to state 80


state 73

    (42) function_call -> ID LPAREN expression_list RPAREN .

    TIMES           reduce using rule 42 (function_call -> ID LPAREN expression_list RPAREN .)
    DIVIDE          reduce using rule 42 (function_call -> ID LPAREN expression_list RPAREN .)
    PLUS            reduce using rule 42 (function_call -> ID LPAREN expression_list RPAREN .)
    MINUS           reduce using rule 42 (function_call -> ID LPAREN expression_list RPAREN .)
    EQ              reduce using rule 42 (function_call -> ID LPAREN expression_list RPAREN .)
    NE              reduce using rule 42 (function_call -> ID LPAREN expression_list RPAREN .)
    LT              reduce using rule 42 (function_call -> ID LPAREN expression_list RPAREN .)
    LE              reduce using rule 42 (function_call -> ID LPAREN expression_list RPAREN .)
    GT              reduce using rule 42 (function_call -> ID LPAREN expression_list RPAREN .)
    GE              reduce using rule 42 (function_call -> ID LPAREN expression_list RPAREN .)
    NEWLINE         reduce using rule 42 (function_call -> ID LPAREN expression_list RPAREN .)
    COLON           reduce using rule 42 (function_call -> ID LPAREN expression_list RPAREN .)
    RPAREN          reduce using rule 42 (function_call -> ID LPAREN expression_list RPAREN .)
    COMMA           reduce using rule 42 (function_call -> ID LPAREN expression_list RPAREN .)


state 74

    (44) expression_list -> expression_list COMMA . expression
    (29) expression -> . arithmetic_expr
    (30) expression -> . comparison_expr
    (31) arithmetic_expr -> . term
    (32) arithmetic_expr -> . arithmetic_expr PLUS term
    (33) arithmetic_expr -> . arithmetic_expr MINUS term
    (46) comparison_expr -> . arithmetic_expr comparison_op arithmetic_expr
    (34) term -> . factor
    (35) term -> . term TIMES factor
    (36) term -> . term DIVIDE factor
    (37) factor -> . LPAREN expression RPAREN
    (38) factor -> . NUMBER
    (39) factor -> . STRING
    (40) factor -> . ID
    (41) factor -> . function_call
    (42) function_call -> . ID LPAREN expression_list RPAREN

    LPAREN          shift and go to state 21
    NUMBER          shift and go to state 28
    STRING          shift and go to state 29
    ID              shift and go to state 34

    expression                     shift and go to state 81
    arithmetic_expr                shift and go to state 24
    comparison_expr                shift and go to state 25
    term                           shift and go to state 26
    factor                         shift and go to state 27
    function_call                  shift and go to state 30

state 75

    (20) parameter_list -> ID .

    RPAREN          reduce using rule 20 (parameter_list -> ID .)
    COMMA           reduce using rule 20 (parameter_list -> ID .)


state 76

    (19) function_def -> DEF ID LPAREN parameter_list . RPAREN COLON suite
    (21) parameter_list -> parameter_list . COMMA ID

    RPAREN          shift and go to state 82
    COMMA           shift and go to state 83


state 77

    (14) print_statement -> PRINT LPAREN expression_list RPAREN .

    NEWLINE         reduce using rule 14 (print_statement -> PRINT LPAREN expression_list RPAREN .)


state 78

    (26) if_statement -> IF expression COLON suite ELSE . COLON suite

    COLON           shift and go to state 84


state 79

    (23) suite -> INDENT statement_list . DEDENT
    (3) statement_list -> statement_list . statement
    (4) statement -> . simple_statement
    (5) statement -> . compound_statement
    (6) simple_statement -> . small_statement NEWLINE
    (15) compound_statement -> . if_statement
    (16) compound_statement -> . while_statement
    (17) compound_statement -> . for_statement
    (18) compound_statement -> . function_def
    (7) small_statement -> . expression_statement
    (8) small_statement -> . assignment_statement
    (9) small_statement -> . return_statement
    (10) small_statement -> . print_statement
    (25) if_statement -> . IF expression COLON suite
    (26) if_statement -> . IF expression COLON suite ELSE COLON suite
    (27) while_statement -> . WHILE expression COLON suite
    (28) for_statement -> . FOR ID IN expression COLON suite
    (19) function_def -> . DEF ID LPAREN parameter_list RPAREN COLON suite
    (11) expression_statement -> . expression
    (12) assignment_statement -> . ID EQUALS expression
    (13) return_statement -> . RETURN expression
    (14) print_statement -> . PRINT LPAREN expression_list RPAREN
    (29) expression -> . arithmetic_expr
    (30) expression -> . comparison_expr
    (31) arithmetic_expr -> . term
    (32) arithmetic_expr -> . arithmetic_expr PLUS term
    (33) arithmetic_expr -> . arithmetic_expr MINUS term
    (46) comparison_expr -> . arithmetic_expr comparison_op arithmetic_expr
    (34) term -> . factor
    (35) term -> . term TIMES factor
    (36) term -> . term DIVIDE factor
    (37) factor -> . LPAREN expression RPAREN
    (38) factor -> . NUMBER
    (39) factor -> . STRING
    (40) factor -> . ID
    (41) factor -> . function_call
    (42) function_call -> . ID LPAREN expression_list RPAREN

    DEDENT          shift and go to state 85
    IF              shift and go to state 15
    WHILE           shift and go to state 17
    FOR             shift and go to state 18
    DEF             shift and go to state 20
    ID              shift and go to state 19
    RETURN          shift and go to state 22
    PRINT           shift and go to state 23
    LPAREN          shift and go to state 21
    NUMBER          shift and go to state 28
    STRING          shift and go to state 29

    statement                      shift and go to state 31
    simple_statement               shift and go to state 4
    compound_statement             shift and go to state 5
    small_statement                shift and go to state 6
    if_statement                   shift and go to state 7
    while_statement                shift and go to state 8
    for_statement                  shift and go to state 9
    function_def                   shift and go to state 10
    expression_statement           shift and go to state 11
    assignment_statement           shift and go to state 12
    return_statement               shift and go to state 13
    print_statement                shift and go to state 14
    expression                     shift and go to state 16
    arithmetic_expr                shift and go to state 24
    comparison_expr                shift and go to state 25
    term                           shift and go to state 26
    factor                         shift and go to state 27
    function_call                  shift and go to state 30

state 80

    (28) for_statement -> FOR ID IN expression COLON . suite
    (23) suite -> . INDENT statement_list DEDENT
    (24) suite -> . simple_statement
    (6) simple_statement -> . small_statement NEWLINE
    (7) small_statement -> . expression_statement
    (8) small_statement -> . assignment_statement
    (9) small_statement -> . return_statement
    (10) small_statement -> . print_statement
    (11) expression_statement -> . expression
    (12) assignment_statement -> . ID EQUALS expression
    (13) return_statement -> . RETURN expression
    (14) print_statement -> . PRINT LPAREN expression_list RPAREN
    (29) expression -> . arithmetic_expr
    (30) expression -> . comparison_expr
    (31) arithmetic_expr -> . term
    (32) arithmetic_expr -> . arithmetic_expr PLUS term
    (33) arithmetic_expr -> . arithmetic_expr MINUS term
    (46) comparison_expr -> . arithmetic_expr comparison_op arithmetic_expr
    (34) term -> . factor
    (35) term -> . term TIMES factor
    (36) term -> . term DIVIDE factor
    (37) factor -> . LPAREN expression RPAREN
    (38) factor -> . NUMBER
    (39) factor -> . STRING
    (40) factor -> . ID
    (41) factor -> . function_call
    (42) function_call -> . ID LPAREN expression_list RPAREN

    INDENT          shift and go to state 69
    ID              shift and go to state 19
    RETURN          shift and go to state 22
    PRINT           shift and go to state 23
    LPAREN          shift and go to state 21
    NUMBER          shift and go to state 28
    STRING          shift and go to state 29

    expression                     shift and go to state 16
    suite                          shift and go to state 86
    simple_statement               shift and go to state 70
    small_statement                shift and go to state 6
    expression_statement           shift and go to state 11
    assignment_statement           shift and go to state 12
    return_statement               shift and go to state 13
    print_statement                shift and go to state 14
    arithmetic_expr                shift and go to state 24
    comparison_expr                shift and go to state 25
    term                           shift and go to state 26
    factor                         shift and go to state 27
    function_call                  shift and go to state 30

state 81

    (44) expression_list -> expression_list COMMA expression .

    RPAREN          reduce using rule 44 (expression_list -> expression_list COMMA expression .)
    COMMA           reduce using rule 44 (expression_list -> expression_list COMMA expression .)


state 82

    (19) function_def -> DEF ID LPAREN parameter_list RPAREN . COLON suite

    COLON           shift and go to state 87


state 83

    (21) parameter_list -> parameter_list COMMA . ID

    ID              shift and go to state 88


state 84

    (26) if_statement -> IF expression COLON suite ELSE COLON . suite
    (23) suite -> . INDENT statement_list DEDENT
    (24) suite -> . simple_statement
    (6) simple_statement -> . small_statement NEWLINE
    (7) small_statement -> . expression_statement
    (8) small_statement -> . assignment_statement
    (9) small_statement -> . return_statement
    (10) small_statement -> . print_statement
    (11) expression_statement -> . expression
    (12) assignment_statement -> . ID EQUALS expression
    (13) return_statement -> . RETURN expression
    (14) print_statement -> . PRINT LPAREN expression_list RPAREN
    (29) expression -> . arithmetic_expr
    (30) expression -> . comparison_expr
    (31) arithmetic_expr -> . term
    (32) arithmetic_expr -> . arithmetic_expr PLUS term
    (33) arithmetic_expr -> . arithmetic_expr MINUS term
    (46) comparison_expr -> . arithmetic_expr comparison_op arithmetic_expr
    (34) term -> . factor
    (35) term -> . term TIMES factor
    (36) term -> . term DIVIDE factor
    (37) factor -> . LPAREN expression RPAREN
    (38) factor -> . NUMBER
    (39) factor -> . STRING
    (40) factor -> . ID
    (41) factor -> . function_call
    (42) function_call -> . ID LPAREN expression_list RPAREN

    INDENT          shift and go to state 69
    ID              shift and go to state 19
    RETURN          shift and go to state 22
    PRINT           shift and go to state 23
    LPAREN          shift and go to state 21
    NUMBER          shift and go to state 28
    STRING          shift and go to state 29

    expression                     shift and go to state 16
    suite                          shift and go to state 89
    simple_statement               shift and go to state 70
    small_statement                shift and go to state 6
    expression_statement           shift and go to state 11
    assignment_statement           shift and go to state 12
    return_statement               shift and go to state 13
    print_statement                shift and go to state 14
    arithmetic_expr                shift and go to state 24
    comparison_expr                shift and go to state 25
    term                           shift and go to state 26
    factor                         shift and go to state 27
    function_call                  shift and go to state 30

state 85

    (23) suite -> INDENT statement_list DEDENT .

    ELSE            reduce using rule 23 (suite -> INDENT statement_list DEDENT .)
    IF              reduce using rule 23 (suite -> INDENT statement_list DEDENT .)
    WHILE           reduce using rule 23 (suite -> INDENT statement_list DEDENT .)
    FOR             reduce using rule 23 (suite -> INDENT statement_list DEDENT .)
    DEF             reduce using rule 23 (suite -> INDENT statement_list DEDENT .)
    ID              reduce using rule 23 (suite -> INDENT statement_list DEDENT .)
    RETURN          reduce using rule 23 (suite -> INDENT statement_list DEDENT .)
    PRINT           reduce using rule 23 (suite -> INDENT statement_list DEDENT .)
    LPAREN          reduce using rule 23 (suite -> INDENT statement_list DEDENT .)
    NUMBER          reduce using rule 23 (suite -> INDENT statement_list DEDENT .)
    STRING          reduce using rule 23 (suite -> INDENT statement_list DEDENT .)
    $end            reduce using rule 23 (suite -> INDENT statement_list DEDENT .)
    DEDENT          reduce using rule 23 (suite -> INDENT statement_list DEDENT .)


state 86

    (28) for_statement -> FOR ID IN expression COLON suite .

    IF              reduce using rule 28 (for_statement -> FOR ID IN expression COLON suite .)
    WHILE           reduce using rule 28 (for_statement -> FOR ID IN expression COLON suite .)
    FOR             reduce using rule 28 (for_statement -> FOR ID IN expression COLON suite .)
    DEF             reduce using rule 28 (for_statement -> FOR ID IN expression COLON suite .)
    ID              reduce using rule 28 (for_statement -> FOR ID IN expression COLON suite .)
    RETURN          reduce using rule 28 (for_statement -> FOR ID IN expression COLON suite .)
    PRINT           reduce using rule 28 (for_statement -> FOR ID IN expression COLON suite .)
    LPAREN          reduce using rule 28 (for_statement -> FOR ID IN expression COLON suite .)
    NUMBER          reduce using rule 28 (for_statement -> FOR ID IN expression COLON suite .)
    STRING          reduce using rule 28 (for_statement -> FOR ID IN expression COLON suite .)
    $end            reduce using rule 28 (for_statement -> FOR ID IN expression COLON suite .)
    DEDENT          reduce using rule 28 (for_statement -> FOR ID IN expression COLON suite .)


state 87

    (19) function_def -> DEF ID LPAREN parameter_list RPAREN COLON . suite
    (23) suite -> . INDENT statement_list DEDENT
    (24) suite -> . simple_statement
    (6) simple_statement -> . small_statement NEWLINE
    (7) small_statement -> . expression_statement
    (8) small_statement -> . assignment_statement
    (9) small_statement -> . return_statement
    (10) small_statement -> . print_statement
    (11) expression_statement -> . expression
    (12) assignment_statement -> . ID EQUALS expression
    (13) return_statement -> . RETURN expression
    (14) print_statement -> . PRINT LPAREN expression_list RPAREN
    (29) expression -> . arithmetic_expr
    (30) expression -> . comparison_expr
    (31) arithmetic_expr -> . term
    (32) arithmetic_expr -> . arithmetic_expr PLUS term
    (33) arithmetic_expr -> . arithmetic_expr MINUS term
    (46) comparison_expr -> . arithmetic_expr comparison_op arithmetic_expr
    (34) term -> . factor
    (35) term -> . term TIMES factor
    (36) term -> . term DIVIDE factor
    (37) factor -> . LPAREN expression RPAREN
    (38) factor -> . NUMBER
    (39) factor -> . STRING
    (40) factor -> . ID
    (41) factor -> . function_call
    (42) function_call -> . ID LPAREN expression_list RPAREN

    INDENT          shift and go to state 69
    ID              shift and go to state 19
    RETURN          shift and go to state 22
    PRINT           shift and go to state 23
    LPAREN          shift and go to state 21
    NUMBER          shift and go to state 28
    STRING          shift and go to state 29

    suite                          shift and go to state 90
    simple_statement               shift and go to state 70
    small_statement                shift and go to state 6
    expression_statement           shift and go to state 11
    assignment_statement           shift and go to state 12
    return_statement               shift and go to state 13
    print_statement                shift and go to state 14
    expression                     shift and go to state 16
    arithmetic_expr                shift and go to state 24
    comparison_expr                shift and go to state 25
    term                           shift and go to state 26
    factor                         shift and go to state 27
    function_call                  shift and go to state 30

state 88

    (21) parameter_list -> parameter_list COMMA ID .

    RPAREN          reduce using rule 21 (parameter_list -> parameter_list COMMA ID .)
    COMMA           reduce using rule 21 (parameter_list -> parameter_list COMMA ID .)


state 89

    (26) if_statement -> IF expression COLON suite ELSE COLON suite .

    IF              reduce using rule 26 (if_statement -> IF expression COLON suite ELSE COLON suite .)
    WHILE           reduce using rule 26 (if_statement -> IF expression COLON suite ELSE COLON suite .)
    FOR             reduce using rule 26 (if_statement -> IF expression COLON suite ELSE COLON suite .)
    DEF             reduce using rule 26 (if_statement -> IF expression COLON suite ELSE COLON suite .)
    ID              reduce using rule 26 (if_statement -> IF expression COLON suite ELSE COLON suite .)
    RETURN          reduce using rule 26 (if_statement -> IF expression COLON suite ELSE COLON suite .)
    PRINT           reduce using rule 26 (if_statement -> IF expression COLON suite ELSE COLON suite .)
    LPAREN          reduce using rule 26 (if_statement -> IF expression COLON suite ELSE COLON suite .)
    NUMBER          reduce using rule 26 (if_statement -> IF expression COLON suite ELSE COLON suite .)
    STRING          reduce using rule 26 (if_statement -> IF expression COLON suite ELSE COLON suite .)
    $end            reduce using rule 26 (if_statement -> IF expression COLON suite ELSE COLON suite .)
    DEDENT          reduce using rule 26 (if_statement -> IF expression COLON suite ELSE COLON suite .)


state 90

    (19) function_def -> DEF ID LPAREN parameter_list RPAREN COLON suite .

    IF              reduce using rule 19 (function_def -> DEF ID LPAREN parameter_list RPAREN COLON suite .)
    WHILE           reduce using rule 19 (function_def -> DEF ID LPAREN parameter_list RPAREN COLON suite .)
    FOR             reduce using rule 19 (function_def -> DEF ID LPAREN parameter_list RPAREN COLON suite .)
    DEF             reduce using rule 19 (function_def -> DEF ID LPAREN parameter_list RPAREN COLON suite .)
    ID              reduce using rule 19 (function_def -> DEF ID LPAREN parameter_list RPAREN COLON suite .)
    RETURN          reduce using rule 19 (function_def -> DEF ID LPAREN parameter_list RPAREN COLON suite .)
    PRINT           reduce using rule 19 (function_def -> DEF ID LPAREN parameter_list RPAREN COLON suite .)
    LPAREN          reduce using rule 19 (function_def -> DEF ID LPAREN parameter_list RPAREN COLON suite .)
    NUMBER          reduce using rule 19 (function_def -> DEF ID LPAREN parameter_list RPAREN COLON suite .)
    STRING          reduce using rule 19 (function_def -> DEF ID LPAREN parameter_list RPAREN COLON suite .)
    $end            reduce using rule 19 (function_def -> DEF ID LPAREN parameter_list RPAREN COLON suite .)
    DEDENT          reduce using rule 19 (function_def -> DEF ID LPAREN parameter_list RPAREN COLON suite .)

