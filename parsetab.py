
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'COLON COMMA COMMENT DEDENT DEF DIVIDE ELSE EQ EQUALS FOR GE GT ID IF IN INDENT LE LPAREN LT MINUS NE NUMBER PLUS PRINT RETURN RPAREN STRING TIMES WHILEprogram : statement_liststatement_list : statement\n                      | statement_list statementstatement : simple_statement\n                 | compound_statement\n                 | COMMENTsimple_statement : assignment\n                        | function_call\n                        | return_statement\n                        | print_statementcompound_statement : function_def\n                          | if_statement\n                          | while_statement\n                          | for_statementassignment : ID EQUALS expressionfunction_call : ID LPAREN expression_list RPARENexpression_list : expression\n                       | expression_list COMMA expression\n                       | return_statement : RETURN expressionprint_statement : PRINT LPAREN expression RPARENfunction_def : DEF ID LPAREN parameter_list RPAREN COLON blockparameter_list : ID\n                      | parameter_list COMMA ID\n                      | if_statement : IF expression COLON block\n                    | IF expression COLON block ELSE COLON blockwhile_statement : WHILE expression COLON blockfor_statement : FOR ID IN expression COLON blockblock : INDENT statement_list DEDENTexpression : arithmetic_expr\n                  | comparison_expr\n                  | STRING\n                  | NUMBER\n                  | ID\n                  | function_callarithmetic_expr : term\n                       | arithmetic_expr PLUS term\n                       | arithmetic_expr MINUS termterm : factor\n            | term TIMES factor\n            | term DIVIDE factorfactor : LPAREN expression RPAREN\n              | NUMBER\n              | IDcomparison_expr : arithmetic_expr GT arithmetic_expr\n                       | arithmetic_expr LT arithmetic_expr\n                       | arithmetic_expr GE arithmetic_expr\n                       | arithmetic_expr LE arithmetic_expr\n                       | arithmetic_expr EQ arithmetic_expr\n                       | arithmetic_expr NE arithmetic_expr'
    
_lr_action_items = {'COMMENT':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,22,25,26,27,28,29,30,31,32,34,40,59,61,62,63,64,65,66,67,68,69,70,71,72,73,74,77,78,79,85,90,91,92,93,],[6,6,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-3,-20,-31,-32,-33,-34,-35,-36,-37,-40,-15,-16,-38,-44,-45,-39,-46,-47,-48,-49,-50,-51,-41,-42,-43,-21,-26,6,-28,6,-30,-29,-22,-27,]),'ID':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,16,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,40,43,44,45,46,47,48,49,50,51,52,55,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,77,78,79,83,85,90,91,92,93,],[15,15,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,30,36,30,30,39,-3,30,30,-20,-31,-32,-33,-34,-35,-36,-37,30,-40,30,-15,63,63,63,63,63,63,63,63,63,63,75,30,-16,30,-38,-44,-45,-39,-46,-47,-48,-49,-50,-51,-41,-42,-43,-21,-26,15,-28,88,15,-30,-29,-22,-27,]),'RETURN':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,22,25,26,27,28,29,30,31,32,34,40,59,61,62,63,64,65,66,67,68,69,70,71,72,73,74,77,78,79,85,90,91,92,93,],[16,16,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-3,-20,-31,-32,-33,-34,-35,-36,-37,-40,-15,-16,-38,-44,-45,-39,-46,-47,-48,-49,-50,-51,-41,-42,-43,-21,-26,16,-28,16,-30,-29,-22,-27,]),'PRINT':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,22,25,26,27,28,29,30,31,32,34,40,59,61,62,63,64,65,66,67,68,69,70,71,72,73,74,77,78,79,85,90,91,92,93,],[17,17,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-3,-20,-31,-32,-33,-34,-35,-36,-37,-40,-15,-16,-38,-44,-45,-39,-46,-47,-48,-49,-50,-51,-41,-42,-43,-21,-26,17,-28,17,-30,-29,-22,-27,]),'DEF':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,22,25,26,27,28,29,30,31,32,34,40,59,61,62,63,64,65,66,67,68,69,70,71,72,73,74,77,78,79,85,90,91,92,93,],[18,18,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-3,-20,-31,-32,-33,-34,-35,-36,-37,-40,-15,-16,-38,-44,-45,-39,-46,-47,-48,-49,-50,-51,-41,-42,-43,-21,-26,18,-28,18,-30,-29,-22,-27,]),'IF':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,22,25,26,27,28,29,30,31,32,34,40,59,61,62,63,64,65,66,67,68,69,70,71,72,73,74,77,78,79,85,90,91,92,93,],[19,19,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-3,-20,-31,-32,-33,-34,-35,-36,-37,-40,-15,-16,-38,-44,-45,-39,-46,-47,-48,-49,-50,-51,-41,-42,-43,-21,-26,19,-28,19,-30,-29,-22,-27,]),'WHILE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,22,25,26,27,28,29,30,31,32,34,40,59,61,62,63,64,65,66,67,68,69,70,71,72,73,74,77,78,79,85,90,91,92,93,],[20,20,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-3,-20,-31,-32,-33,-34,-35,-36,-37,-40,-15,-16,-38,-44,-45,-39,-46,-47,-48,-49,-50,-51,-41,-42,-43,-21,-26,20,-28,20,-30,-29,-22,-27,]),'FOR':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,22,25,26,27,28,29,30,31,32,34,40,59,61,62,63,64,65,66,67,68,69,70,71,72,73,74,77,78,79,85,90,91,92,93,],[21,21,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-3,-20,-31,-32,-33,-34,-35,-36,-37,-40,-15,-16,-38,-44,-45,-39,-46,-47,-48,-49,-50,-51,-41,-42,-43,-21,-26,21,-28,21,-30,-29,-22,-27,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,13,14,22,25,26,27,28,29,30,31,32,34,40,59,61,62,63,64,65,66,67,68,69,70,71,72,73,74,77,79,90,91,92,93,],[0,-1,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-3,-20,-31,-32,-33,-34,-35,-36,-37,-40,-15,-16,-38,-44,-45,-39,-46,-47,-48,-49,-50,-51,-41,-42,-43,-21,-26,-28,-30,-29,-22,-27,]),'DEDENT':([3,4,5,6,7,8,9,10,11,12,13,14,22,25,26,27,28,29,30,31,32,34,40,59,61,62,63,64,65,66,67,68,69,70,71,72,73,74,77,79,85,90,91,92,93,],[-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-3,-20,-31,-32,-33,-34,-35,-36,-37,-40,-15,-16,-38,-44,-45,-39,-46,-47,-48,-49,-50,-51,-41,-42,-43,-21,-26,-28,90,-30,-29,-22,-27,]),'EQUALS':([15,],[23,]),'LPAREN':([15,16,17,19,20,23,24,30,33,35,36,43,44,45,46,47,48,49,50,51,52,58,60,],[24,33,35,33,33,33,33,24,33,33,55,33,33,33,33,33,33,33,33,33,33,33,33,]),'STRING':([16,19,20,23,24,33,35,58,60,],[28,28,28,28,28,28,28,28,28,]),'NUMBER':([16,19,20,23,24,33,35,43,44,45,46,47,48,49,50,51,52,58,60,],[29,29,29,29,29,29,29,62,62,62,62,62,62,62,62,62,62,29,29,]),'RPAREN':([24,26,27,28,29,30,31,32,34,41,42,53,54,55,59,61,62,63,64,65,66,67,68,69,70,71,72,73,75,76,81,88,],[-19,-31,-32,-33,-34,-35,-36,-37,-40,59,-17,73,74,-25,-16,-38,-44,-45,-39,-46,-47,-48,-49,-50,-51,-41,-42,-43,-23,82,-18,-24,]),'COMMA':([24,26,27,28,29,30,31,32,34,41,42,55,59,61,62,63,64,65,66,67,68,69,70,71,72,73,75,76,81,88,],[-19,-31,-32,-33,-34,-35,-36,-37,-40,60,-17,-25,-16,-38,-44,-45,-39,-46,-47,-48,-49,-50,-51,-41,-42,-43,-23,83,-18,-24,]),'COLON':([26,27,28,29,30,31,32,34,37,38,59,61,62,63,64,65,66,67,68,69,70,71,72,73,80,82,84,],[-31,-32,-33,-34,-35,-36,-37,-40,56,57,-16,-38,-44,-45,-39,-46,-47,-48,-49,-50,-51,-41,-42,-43,86,87,89,]),'PLUS':([26,29,30,32,34,61,62,63,64,65,66,67,68,69,70,71,72,73,],[43,-44,-45,-37,-40,-38,-44,-45,-39,43,43,43,43,43,43,-41,-42,-43,]),'MINUS':([26,29,30,32,34,61,62,63,64,65,66,67,68,69,70,71,72,73,],[44,-44,-45,-37,-40,-38,-44,-45,-39,44,44,44,44,44,44,-41,-42,-43,]),'GT':([26,29,30,32,34,61,62,63,64,71,72,73,],[45,-44,-45,-37,-40,-38,-44,-45,-39,-41,-42,-43,]),'LT':([26,29,30,32,34,61,62,63,64,71,72,73,],[46,-44,-45,-37,-40,-38,-44,-45,-39,-41,-42,-43,]),'GE':([26,29,30,32,34,61,62,63,64,71,72,73,],[47,-44,-45,-37,-40,-38,-44,-45,-39,-41,-42,-43,]),'LE':([26,29,30,32,34,61,62,63,64,71,72,73,],[48,-44,-45,-37,-40,-38,-44,-45,-39,-41,-42,-43,]),'EQ':([26,29,30,32,34,61,62,63,64,71,72,73,],[49,-44,-45,-37,-40,-38,-44,-45,-39,-41,-42,-43,]),'NE':([26,29,30,32,34,61,62,63,64,71,72,73,],[50,-44,-45,-37,-40,-38,-44,-45,-39,-41,-42,-43,]),'TIMES':([29,30,32,34,61,62,63,64,71,72,73,],[-44,-45,51,-40,51,-44,-45,51,-41,-42,-43,]),'DIVIDE':([29,30,32,34,61,62,63,64,71,72,73,],[-44,-45,52,-40,52,-44,-45,52,-41,-42,-43,]),'IN':([39,],[58,]),'INDENT':([56,57,86,87,89,],[78,78,78,78,78,]),'ELSE':([77,90,],[84,-30,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'statement_list':([0,78,],[2,85,]),'statement':([0,2,78,85,],[3,22,3,22,]),'simple_statement':([0,2,78,85,],[4,4,4,4,]),'compound_statement':([0,2,78,85,],[5,5,5,5,]),'assignment':([0,2,78,85,],[7,7,7,7,]),'function_call':([0,2,16,19,20,23,24,33,35,58,60,78,85,],[8,8,31,31,31,31,31,31,31,31,31,8,8,]),'return_statement':([0,2,78,85,],[9,9,9,9,]),'print_statement':([0,2,78,85,],[10,10,10,10,]),'function_def':([0,2,78,85,],[11,11,11,11,]),'if_statement':([0,2,78,85,],[12,12,12,12,]),'while_statement':([0,2,78,85,],[13,13,13,13,]),'for_statement':([0,2,78,85,],[14,14,14,14,]),'expression':([16,19,20,23,24,33,35,58,60,],[25,37,38,40,42,53,54,80,81,]),'arithmetic_expr':([16,19,20,23,24,33,35,45,46,47,48,49,50,58,60,],[26,26,26,26,26,26,26,65,66,67,68,69,70,26,26,]),'comparison_expr':([16,19,20,23,24,33,35,58,60,],[27,27,27,27,27,27,27,27,27,]),'term':([16,19,20,23,24,33,35,43,44,45,46,47,48,49,50,58,60,],[32,32,32,32,32,32,32,61,64,32,32,32,32,32,32,32,32,]),'factor':([16,19,20,23,24,33,35,43,44,45,46,47,48,49,50,51,52,58,60,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,71,72,34,34,]),'expression_list':([24,],[41,]),'parameter_list':([55,],[76,]),'block':([56,57,86,87,89,],[77,79,91,92,93,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','analizad2.py',88),
  ('statement_list -> statement','statement_list',1,'p_statement_list','analizad2.py',92),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','analizad2.py',93),
  ('statement -> simple_statement','statement',1,'p_statement','analizad2.py',100),
  ('statement -> compound_statement','statement',1,'p_statement','analizad2.py',101),
  ('statement -> COMMENT','statement',1,'p_statement','analizad2.py',102),
  ('simple_statement -> assignment','simple_statement',1,'p_simple_statement','analizad2.py',106),
  ('simple_statement -> function_call','simple_statement',1,'p_simple_statement','analizad2.py',107),
  ('simple_statement -> return_statement','simple_statement',1,'p_simple_statement','analizad2.py',108),
  ('simple_statement -> print_statement','simple_statement',1,'p_simple_statement','analizad2.py',109),
  ('compound_statement -> function_def','compound_statement',1,'p_compound_statement','analizad2.py',113),
  ('compound_statement -> if_statement','compound_statement',1,'p_compound_statement','analizad2.py',114),
  ('compound_statement -> while_statement','compound_statement',1,'p_compound_statement','analizad2.py',115),
  ('compound_statement -> for_statement','compound_statement',1,'p_compound_statement','analizad2.py',116),
  ('assignment -> ID EQUALS expression','assignment',3,'p_assignment','analizad2.py',120),
  ('function_call -> ID LPAREN expression_list RPAREN','function_call',4,'p_function_call','analizad2.py',124),
  ('expression_list -> expression','expression_list',1,'p_expression_list','analizad2.py',128),
  ('expression_list -> expression_list COMMA expression','expression_list',3,'p_expression_list','analizad2.py',129),
  ('expression_list -> <empty>','expression_list',0,'p_expression_list','analizad2.py',130),
  ('return_statement -> RETURN expression','return_statement',2,'p_return_statement','analizad2.py',139),
  ('print_statement -> PRINT LPAREN expression RPAREN','print_statement',4,'p_print_statement','analizad2.py',143),
  ('function_def -> DEF ID LPAREN parameter_list RPAREN COLON block','function_def',7,'p_function_def','analizad2.py',147),
  ('parameter_list -> ID','parameter_list',1,'p_parameter_list','analizad2.py',151),
  ('parameter_list -> parameter_list COMMA ID','parameter_list',3,'p_parameter_list','analizad2.py',152),
  ('parameter_list -> <empty>','parameter_list',0,'p_parameter_list','analizad2.py',153),
  ('if_statement -> IF expression COLON block','if_statement',4,'p_if_statement','analizad2.py',162),
  ('if_statement -> IF expression COLON block ELSE COLON block','if_statement',7,'p_if_statement','analizad2.py',163),
  ('while_statement -> WHILE expression COLON block','while_statement',4,'p_while_statement','analizad2.py',170),
  ('for_statement -> FOR ID IN expression COLON block','for_statement',6,'p_for_statement','analizad2.py',174),
  ('block -> INDENT statement_list DEDENT','block',3,'p_block','analizad2.py',178),
  ('expression -> arithmetic_expr','expression',1,'p_expression','analizad2.py',182),
  ('expression -> comparison_expr','expression',1,'p_expression','analizad2.py',183),
  ('expression -> STRING','expression',1,'p_expression','analizad2.py',184),
  ('expression -> NUMBER','expression',1,'p_expression','analizad2.py',185),
  ('expression -> ID','expression',1,'p_expression','analizad2.py',186),
  ('expression -> function_call','expression',1,'p_expression','analizad2.py',187),
  ('arithmetic_expr -> term','arithmetic_expr',1,'p_arithmetic_expr','analizad2.py',191),
  ('arithmetic_expr -> arithmetic_expr PLUS term','arithmetic_expr',3,'p_arithmetic_expr','analizad2.py',192),
  ('arithmetic_expr -> arithmetic_expr MINUS term','arithmetic_expr',3,'p_arithmetic_expr','analizad2.py',193),
  ('term -> factor','term',1,'p_term','analizad2.py',200),
  ('term -> term TIMES factor','term',3,'p_term','analizad2.py',201),
  ('term -> term DIVIDE factor','term',3,'p_term','analizad2.py',202),
  ('factor -> LPAREN expression RPAREN','factor',3,'p_factor','analizad2.py',209),
  ('factor -> NUMBER','factor',1,'p_factor','analizad2.py',210),
  ('factor -> ID','factor',1,'p_factor','analizad2.py',211),
  ('comparison_expr -> arithmetic_expr GT arithmetic_expr','comparison_expr',3,'p_comparison_expr','analizad2.py',218),
  ('comparison_expr -> arithmetic_expr LT arithmetic_expr','comparison_expr',3,'p_comparison_expr','analizad2.py',219),
  ('comparison_expr -> arithmetic_expr GE arithmetic_expr','comparison_expr',3,'p_comparison_expr','analizad2.py',220),
  ('comparison_expr -> arithmetic_expr LE arithmetic_expr','comparison_expr',3,'p_comparison_expr','analizad2.py',221),
  ('comparison_expr -> arithmetic_expr EQ arithmetic_expr','comparison_expr',3,'p_comparison_expr','analizad2.py',222),
  ('comparison_expr -> arithmetic_expr NE arithmetic_expr','comparison_expr',3,'p_comparison_expr','analizad2.py',223),
]
